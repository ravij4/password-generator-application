// App.js
import React, { useState, useEffect } from 'react';
const App = () => {
  const [length, setLength] = useState(12);
  const [includeUppercase, setIncludeUppercase] = useState(true);
  const [includeLowercase, setIncludeLowercase] = useState(true);
  const [includeNumbers, setIncludeNumbers] = useState(true);
  const [includeSymbols, setIncludeSymbols] = useState(false);
  const [password, setPassword] = useState('');
  const generatePassword = () => {
    const upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    const lower = "abcdefghijklmnopqrstuvwxyz";
    const numbers = "0123456789";
    const symbols = "!@#$%^&*()";
    let charSet = '';
    if (includeUppercase) charSet += upper;
    if (includeLowercase) charSet += lower;
    if (includeNumbers) charSet += numbers;
    if (includeSymbols) charSet += symbols;
    let newPassword = '';
    for (let i = 0; i < length; i++) {
      const randomIndex = Math.floor(Math.random() * charSet.length);
      newPassword += charSet[randomIndex];
    }
    setPassword(newPassword);
  };
const copyToClipboard = () => {
    navigator.clipboard.writeText(password);
    alert("Password copied to clipboard!");
  };
  useEffect(() => {
    generatePassword();
  }, [length, includeUppercase, includeLowercase, includeNumbers, includeSymbols]);
  return (
    <div className="min-h-screen bg-gray-100 dark:bg-gray-800 p-10">
      <div className="max-w-md mx-auto bg-white dark:bg-gray-900 rounded-xl shadow-md overflow-hidden p-6">
        <h1 className="text-xl font-bold text-center mb-4 text-gray-800 dark:text-white">Password Generator</h1> 
        <label>Password Length: {length}</label>
        <input type="range" min="4" max="32" value={length} onChange={(e) => setLength(e.target.value)} className="w-full" />   
        <div className="flex flex-col gap-2 my-4">
          <label><input type="checkbox" checked={includeUppercase} onChange={() => setIncludeUppercase(!includeUppercase)} /> Include Uppercase</label>
          <label><input type="checkbox" checked={includeLowercase} onChange={() => setIncludeLowercase(!includeLowercase)} /> Include Lowercase</label>
          <label><input type="checkbox" checked={includeNumbers} onChange={() => setIncludeNumbers(!includeNumbers)} /> Include Numbers</label>
          <label><input type="checkbox" checked={includeSymbols} onChange={() => setIncludeSymbols(!includeSymbols)} /> Include Symbols</label>
        </div>
        <div className="bg-gray-200 dark:bg-gray-700 p-3 rounded font-mono text-center mb-4">{password}</div>     
        <div className="flex gap-2">
          <button onClick={generatePassword} className="flex-1 bg-blue-600 text-white p-2 rounded">Generate</button>
          <button onClick={copyToClipboard} className="flex-1 bg-green-600 text-white p-2 rounded">Copy</button>
        </div>
      </div>
    </div>
  );
};
export default App;



